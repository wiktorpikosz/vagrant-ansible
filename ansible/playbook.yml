---
- hosts: all
  sudo: true
  tasks:

  - name: create /home/vagrant/public_html
    file: path=/home/vagrant/public_html state=directory

  - name: install misc packages
    apt: name={{ item }} state=latest
    with_items:
      - rubygems
      - git-core
      - curl
      - unzip
      - vim
      - mc
      - htop
  # memcached

  - name: ensure memcached is installed
    apt: name=memcached state=latest


  # beanstalk

  - name: install beanstalk for local queues
    apt: name=beanstalkd state=present
  - name: set up beanstalk
    copy: src=/home/vagrant/ansible/beanstalkd/beanstalkd dest=/etc/default/beanstalkd
    notify: restart beanstalkd

  # Apache2 

  - name: ensure apache is installed
    apt: name=apache2 state=present

  - file: src=/etc/apache2/mods-available/rewrite.load dest=/etc/apache2/mods-enabled/rewrite.load state=link

  - file: src=/etc/apache2/mods-available/headers.load dest=/etc/apache2/mods-enabled/headers.load state=link

  - copy: src=/home/vagrant/ansible/apache2/site.conf dest=/etc/apache2/sites-enabled/site.conf

  - file: path=/etc/apache2/sites-enabled/000-default.conf state=absent

  - file: path=/etc/apache2/conf.d state=directory

  - copy: src=/home/vagrant/ansible/apache2/fqdn.conf dest=/etc/apache2/conf.d/fqdn.conf

  - copy: src=/home/vagrant/ansible/apache2/nosendfile.conf dest=/etc/apache2/conf.d/nosendfile.conf

  # MySQL

  - name: install MySQL
    apt: name={{ item }} state=latest
    with_items:
      - mysql-server
      - mysql-client
      - python-mysqldb

  - name: add mysql user
    mysql_user: name=vagrant
                host={{ item }}
                password=vagrant priv=*.*:ALL,GRANT
                login_user=root
                login_password=
    with_items:
      - '%'
      - localhost

  - name: create mysql databases
    mysql_db: name={{ item }}
              state=present
    with_items:
      - site_development
      - site_development_stats
      - site_testing
      - site_testing_stats

  - file: path=/etc/mysql/conf.d state=directory
  - name: Set MySQL number of connections
    copy: src=/home/vagrant/ansible/mysql/max_connections.cnf dest=/etc/mysql/conf.d/max_connections.cnf
    notify: restart mysql
  - name: Install mysql command line client configuration file
    copy: src=/home/vagrant/ansible/mysql/my.cnf dest=/home/vagrant/.my.cnf owner=vagrant group=vagrant

  # PHP
  - name: add php5 repo 
    apt_repository: repo='{{item}}' state=present
    with_items:
        - 'deb http://ftp.us.debian.org/debian/ jessie main contrib non-free'
        - 'deb-src http://ftp.us.debian.org/debian/ jessie main contrib non-free'
        - 'deb http://security.debian.org/ jessie/updates main contrib non-free'
        - 'deb-src http://security.debian.org/ jessie/updates main contrib non-free'

    
  - name: install PHP5 packages
    apt: name={{ item }} state=latest
    with_items:
      - php5-fpm
      - libapache2-mod-fastcgi
      - php5-cli
      - php5-dev
      - php5-mysql
      - php-pear
      - php5-mcrypt
      - php5-gd
      - php5-curl
      - php5-xdebug
      - php5-memcache
      - php5-memcached
      - php5-readline
      - php5-sqlite

  - file: path=/etc/php5/conf.d state=directory

  - copy: src=/home/vagrant/ansible/php/php-site.ini dest=/etc/php5/fpm/conf.d/php-site.ini

  - name: symlink common php configuration for cli handler
    file: src=/etc/php5/fpm/conf.d/php-site.ini dest=/etc/php5/cli/conf.d/php-site.ini state=link

  - name: configure php-fpm pool (static)
    template: src=/home/vagrant/ansible/php/www.conf dest=/etc/php5/fpm/pool.d/www.conf
    notify: restart php5-fpm

  - name: a2enmod active
    shell: a2enmod actions fastcgi alias
    
   #Run apache2 with php-fpm
  - name: make sure apache is running
    action: service name=apache2 state=started enabled=true
    
  # phpmyadmin

  - name: install phpmyadmin
    apt: name=phpmyadmin state=latest
  
  # Assets compilation

  - name: install nodejs
    apt: name=nodejs state=latest

  - name: install rubygems
    apt: name=rubygems state=present
    
  - name: Install composer
    shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

  # Set up site
  #
  
  - name: ensure once more that 000-default.conf is deleted
    file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
    notify: restart apache

  - name: ensure that phpmyadmin's stock config is deleted
    file: path=/etc/apache2/conf.d/phpmyadmin.conf state=absent
    notify: restart apache

  handlers:
    - name: restart apache
      action: service name=apache2 state=restarted
    - name: restart mysql
      action: service name=mysql state=restarted
    - name: restart php5-fpm
      action: service name=php5-fpm state=restarted
    - name: restart beanstalkd
      action: service name=beanstalkd state=restarted